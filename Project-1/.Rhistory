setwd("C:/Coursera_Data_Science/Reproducible Research/Project-1")
rdata <- read.csv("activity.csv",header=T)
str(rdata)
ggplot2
library(ggplot2)
data <- read.csv("activity.csv",header=T)
str(rdata)
attach(data)
total.steps <- tapply(steps,date,sum,na.rm=T)
head(total.steps)
qplot(total.steps,data=total.steps,)
qplot(total.steps,data=total.steps)
qplot(total.steps)
qplot(total.steps,binwidth=1000)
qplot(total.steps,binwidth=1000,fill="red")
qplot(total.steps,binwidth=1000,fill="red",xlab="No. of steps per day",ylab="No. of times in a day(count)"main="Histogram of steps take per day")
qplot(total.steps,binwidth=1000,fill="red",xlab="No. of steps per day",ylab="No. of times in a day(count)",main="Histogram of steps take per day")
str(rdata)
qplot(total.steps,aes(date,steps),binwidth=1000,fill="red",xlab="No. of steps per day",ylab="No. of times in a day(count)",main="Histogram of steps take per day")
qplot(data,aes(date,steps),binwidth=1000,fill="red",xlab="No. of steps per day",ylab="No. of times in a day(count)",main="Histogram of steps take per day")
qplot(total.steps,binwidth=1000,fill="red",xlab="No. of steps per day",ylab="No. of times in a day(count)"main="Histogram of steps take per day")
qplot(total.steps,binwidth=1000,fill="red",xlab="No. of steps per day",ylab="No. of times in a day(count)",main="Histogram of steps take per day")
qplot(total.steps,binwidth=1000,fill="red",xlab="No. of steps per day",ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
qplot(total.steps,binwidth=1000,fill="date",xlab="No. of steps per day",ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
qplot(total.steps,binwidth=1000,fill=date,xlab="No. of steps per day",ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
qplot(total.steps,binwidth=1000,fill=total.steps$date,xlab="No. of steps per day",ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
qplot(total.steps,binwidth=1000,fill="Red",xlab="No. of steps per day",ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
mean(total.steps,na.rm=T)
mean(data,na.rm=T)
mean(total.steps)
median(total.steps)
data <- read.csv("activity.csv",header=T)
mean(data$steps,na.rm=T)
mean(total.steps,na.rm=TRUE)
median(total.steps,na.rm=TRUE)
str(data)
str(total.steps)
?tapply
total.steps <- tapply(steps,date,sum)
head(total.steps)
total.steps <- tapply(steps,date,sum,na.rm=TRUE)
head(total.steps)
data<-data[complete.cases(data),]
head(data)
total.steps <- tapply(steps,date,sum)
head(total.steps)
total.steps <- tapply(data$steps,data$date,sum)
head(total.steps)
total.steps <- tapply(v$steps,v$date,sum)
v<-data[complete.cases(data),]
total.steps <- tapply(v$steps,v$date,sum)
head(total.steps)
mean(total.steps)
head(total.steps)
r<-na.omit(data)
total.steps <- tapply(r$steps,r$date,sum)
head(total.steps)
head(data)
mean(total.steps)
total.steps <- tapply(v$steps,v$date,sum)
head(total.steps)
head(v)
data <- read.csv("activity.csv",header=T)
str(data)
v<-data[complete.cases(data),]
head(v)
total.steps <- tapply(v$steps,v$date,sum)
head(total.steps)
head(data)
total.steps <- tapply(v$steps,v$date,sum,na.rm=T)
head(total.steps)
data <- read.csv("activity.csv",header=T,colClasses=c('integer','Date','factor')
data <- read.csv("activity.csv",header=T,colClasses=c('integer','Date','factor'))
library(ggplot2)
setwd("C:/Coursera_Data_Science/Reproducible Research/Project-1")
data <- read.csv("activity.csv",header=T,colClasses=c('integer','Date','factor'))
str(data)
v<-data[complete.cases(data),]
head(v)
total.steps <- tapply(v$steps,v$date,sum,na.rm=T)
head(total.steps)
qplot(total.steps,binwidth=1000,fill="Red",xlab="No. of steps per day",
ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
median(total.steps)
mean(total.steps)
attach(data)      ## Attaching the data
total.steps <- tapply(steps,date,sum,na.rm=T)
head(total.steps)
head(data)
qplot(total.steps,binwidth=1000,fill="Red",xlab="No. of steps per day",
ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
mean(total.steps)
median(total.steps)
data<-data[complete.cases(data),]
attach(data)      ## Attaching the data
head(data)
total.steps <- tapply(steps,date,sum)
head(total.steps)
qplot(total.steps,binwidth=1000,fill="Red",xlab="No. of steps per day",
ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
mean(total.steps)
median(total.steps)
steps.interval <- aggregate(steps~interval,data,mean)
qplot(steps.interval,geom="line",color="purple")
qplot(steps.interval,aes(interval,steps),geom="line",color="purple")
qplot(steps.interval,aes(interval,steps),geom="line")
steps.interval <- tapply(steps,interval,mean)
qplot(steps.interval,aes(interval,steps),geom="line")
qplot(steps.interval,geom="line")
steps.interval <- aggregate(steps~interval,data,mean)
attach(steps.interval)
g <- ggplot(steps.interval,aes(interval,steps))
g + geom_line()
steps.interval <- aggregate(steps~list(interval),data,mean)
data <- read.csv("activity.csv",header=T,colClasses=c('integer','Date'))
str(data)
data<-data[complete.cases(data),]
attach(data)      ## Attaching the data
head(data)
total.steps <- tapply(steps,date,sum)
head(total.steps)
## Plotting the histogram
qplot(total.steps,binwidth=1000,fill="Red",xlab="No. of steps per day",
ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
mean(total.steps)
median(total.steps)
steps.interval <- aggregate(steps~list(interval),data,mean)
steps.interval <- aggregate(steps~interval,data,mean)
attach(steps.interval)
g <- ggplot(steps.interval,aes(interval,steps))
g + geom_line()
qplot(interval,steps,data=steps.interval,geom="line")
qplot(interval,steps,data=steps.interval,geom="line",color="green")
g <- ggplot(steps.interval,aes(interval,steps))
g + geom_line()
qplot(interval,steps,data=steps.interval,geom="line")
qplot(interval,steps,data=steps.interval,geom="line",color=steps)
qplot(interval,steps,data=steps.interval,geom="line",color="blue")
qplot(interval,steps,data=steps.interval,geom="line",color="red")
g <- ggplot(steps.interval,aes(interval,steps))
g + geom_line()
qplot(interval,steps,data=steps.interval,geom="line",color="red")
g <- ggplot(steps.interval,aes(interval,steps))
g + geom_line() + xlab("Interval") + ylab("No. of Steps") + ggtitle("Average daily activity pattern")
g + geom_line(color="purple") + xlab("Interval") + ylab("No. of Steps") + ggtitle("Average daily activity pattern")
g + geom_line(color="purple") + theme_bw + xlab("Interval") + ylab("No. of Steps") + ggtitle("Average daily activity pattern")
g <- ggplot(steps.interval,aes(interval,steps))
g + geom_line(color="purple") + theme_bw + xlab("Interval") + ylab("No. of Steps") + ggtitle("Average daily activity pattern")
g + geom_line(color="purple") + theme_bw() + xlab("Interval") + ylab("No. of Steps") + ggtitle("Average daily activity pattern")
g <- ggplot(steps.interval,aes(interval,steps))
g + geom_line(color="purple") + theme_bw() + xlab("5-minute Interval") + ylab("Average no. of steps taken") + ggtitle("Average daily activity pattern")
```
steps.interval[which.max(steps.interval$steps),]
sum(is.na(data))
Reproducible Research - Peer Assessment 1
==============================================
####Naman Jain
09 Jan 2015
###Introduction
This document presents the results of peer assessments 1 of course Reproducible Research on coursera. This assignment makes use of data from a personal activity monitoring device. This device collects data at 5 minute intervals through out the day. The data consists of two months of data from an anonymous individual collected during the months of October and November, 2012 and include the number of steps taken in 5 minute intervals each day.
This document presents the results of the Reproducible Research's Peer Assessment 1 in a report using a single R markdown document that can be processed by knitr and be transformed into an HTML file.
####Load required library
```{r}
library(ggplot2)
```
####Loading and preprocessing the data
**Set the working directory**
```{r,echo=TRUE}
setwd("C:/Coursera_Data_Science/Reproducible Research/Project-1")
```
**Load the required data**
```{r}
data <- read.csv("activity.csv",header=T,colClasses=c('integer','Date'))
```
Now let's check the data using str() method:
```{r}
str(data)
```
####What is mean total number of steps taken per day?
1. Histogram of the total number of steps taken each day ; ignoring missing values
```{r,echo=TRUE,fig.height=4}
rdata<-data[complete.cases(data),]
attach(rdata)      ## Attaching the data
head(rdata)
total.steps <- tapply(steps,date,sum)
head(total.steps)
## Plotting the histogram
qplot(total.steps,binwidth=1000,fill="Red",xlab="No. of steps per day",
ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
```
2. **Mean** and **Median** of total number of steps taken per day
```{r}
mean(total.steps)
median(total.steps)
```
####What is the average daily activity pattern?
1. Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)
```{r,echo=TRUE,fig.height=4}
steps.interval <- aggregate(steps~interval,rdata,mean)
attach(steps.interval)
g <- ggplot(steps.interval,aes(interval,steps))
g + geom_line(color="purple") + theme_bw() + xlab("5-minute Interval") + ylab("Average no. of steps taken") + ggtitle("Average daily activity pattern")
```
2.Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
```{r}
steps.interval[which.max(steps.interval$steps),]
```
####Imputing missing values
1.Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)
```{r}
sum(is.na(data))
```
sum(is.na(data))
sum(is.na(data))
steps.interval <- aggregate(steps~interval,rdata,mean)
head(steps.interval)
averages <- aggregate(steps~date,data,mean,na.rm=T)
head(averages)
mean(data,na.rm=T)
mean(data$steps,na.rm=T)
median(data$steps,na.rm=T)
?aggregate
averages <- aggregate(steps~date,data,mean)
head(averages)
averages <- aggregate(steps~date,data,mean,na.rm=T)
head(averages)
```{r}
average_by_date <- aggregate(steps~date,data,mean)
head(average_by_date)
impData <- data
for(i in seq_along(impData))
{
if (is.na(impData$steps[i])) {
if (impData$date[i] == average_by_date$date)
{
impData$steps[i] <- average_by_date$steps
}
}
}
average_by_date <- aggregate(steps~date,data,mean)
head(average_by_date)
impData <- data
for(i in seq_along(impData))
{
if (is.na(impData$steps[i])) {
if (impData$date[i] == average_by_date$date)
{
impData$steps[i] <- average_by_date$steps
}
}
}
impData <- data
for(i in seq_len(impData))
{
if (is.na(impData$steps[i])) {
if (impData$date[i] == average_by_date$date)
{
impData$steps[i] <- average_by_date$steps
}
}
}
for(i in seq_along(impData))
{
if (is.na(impData$steps[i])) {
if (impData$date[i] == average_by_date$date)
{
impData$steps[i] <- average_by_date$steps
}
}
}
for(i in 1:nrow(impData))
{
if (is.na(impData$steps[i])) {
if (impData$date[i] == average_by_date$date)
{
impData$steps[i] <- average_by_date$steps
}
}
}
head(impData)
head(average_by_date)
average_by_interval <- aggregate(steps~interval,data,mean)
head(average_by_date)
impData <- data
for(i in 1:nrow(impData))
{
if (is.na(impData$steps[i])) {
if (impData$date[i] == average_by_date$date)
{
impData$steps[i] <- average_by_date$steps
}
}
}
average_by_interval <- aggregate(steps~interval,data,mean)
head(average_by_date)
impData <- data
for(i in 1:nrow(impData))
{
if (is.na(impData$steps[i])) {
if (impData$date[i] == average_by_interval$date)
{
impData$steps[i] <- average_by_interval$steps
}
}
}
head(impData)
average_by_interval <- aggregate(steps~interval,data,mean)
head(average_by_date)
head(average_by_interval)
head(steps.interval)
average_by_interval <- aggregate(steps~interval,data,mean)
head(average_by_interval)
impData <- data
for(i in 1:nrow(impData))
{
if (is.na(impData$steps[i])) {
impData$steps <- average_by_interval[which(impData$date[i] == average_by_interval$interval),]$steps
}
}
for(i in 1:nrow(impData))
{
if (is.na(impData$steps[i])) {
impData$steps <- average_by_interval[which(impData$interval[i] == average_by_interval$interval),]$steps
}
}
head(impData)
for(i in seq_along(impData))
{
if (is.na(impData$steps[i])) {
impData$steps <- average_by_interval[which(impData$interval[i] == average_by_interval$interval),]$steps
}
}
head(impData)
sum(!complete.cases(impData))
average_by_interval <- aggregate(steps~interval,data,mean)
head(average_by_interval)
impData <- data
for(i in seq_along(impData))
{
if (is.na(impData$steps[i])) {
impData$steps <- average_by_interval[which(impData$interval[i] == average_by_interval$interval),]$steps
}
}
head(impData)
sum(!complete.cases(impData))
## Imputing missing values by using mean for the 5-minute interval.
average_by_interval <- aggregate(steps~interval,data,mean)
head(average_by_interval)
impData <- data
for(i in seq_along(impData))
{
if (is.na(impData$steps[i])) {
impData$steps[i] <- average_by_interval[which(impData$interval[i] == average_by_interval$interval),]$steps
}
}
head(impData)
average_by_interval <- aggregate(steps~interval,data,mean)
head(average_by_interval)
impData <- data
for(i in seq_along(impData))
{
if (is.na(impData$steps[i])) {
impData$steps <- average_by_interval[which(impData$interval[i] == average_by_interval$interval),]$steps
}
}
head(impData)
```
tail(impData)
head(average_by_interval)
impData <- data
for(i in 1:nrow(impData))
{
if (is.na(impData$steps[i])) {
impData$steps[i] <- average_by_interval[which(impData$interval[i] == average_by_interval$interval),]$steps
}
}
head(impData)
tail(impData)
averages <- aggregate(steps~interval,data,mean)
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (averages[averages$interval==interval, "steps"])
return(filled)
}
filled.data <- data
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
```
head(filled.data)
tail(filled.data)
averages_by_interval <- aggregate(steps~interval,data,mean)
head(average_by_interval)
impData <- data
for(i in 1:nrow(impData))
{
if (is.na(impData$steps[i])) {
impData$steps[i] <- average_by_interval[which(impData$interval[i] == average_by_interval$interval),]$steps
}
}
head(impData)
tail(impData)
averages_by_interval <- aggregate(steps~interval,data,mean)
head(average_by_interval)
impData <- data
for(i in seq_along(impData))
{
if (is.na(impData$steps[i])) {
impData$steps[i] <- average_by_interval[which(impData$interval[i] == average_by_interval$interval),]$steps
}
}
head(impData)
tail(impData)
averages_by_interval <- aggregate(steps~interval,data,mean)
head(average_by_interval)
impData <- data
for(i in seq_len(impData))
{
if (is.na(impData$steps[i])) {
impData$steps[i] <- average_by_interval[which(impData$interval[i] == average_by_interval$interval),]$steps
}
}
head(impData)
tail(impData)
head(average_by_interval)
impData <- data
for(i in 1:nrow(impData))
{
if (is.na(impData$steps[i])) {
impData$steps[i] <- average_by_interval[which(impData$interval[i] == average_by_interval$interval),]$steps
}
}
head(impData)
tail(impData)
head(average_by_interval)
attach(impData)
filled.data <- tapply(steps,date,sum)
head(filled.data)
## Plotting the histogram
qplot(filled.data,binwidth=1000,fill="Blue",xlab="No. of steps per day",
ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
steps.interval[which.max(steps.interval$steps),]
qplot(filled.data,binwidth=1000,fill="blue",xlab="No. of steps per day",
ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
qplot(filled.data,binwidth=1000,color="blue",xlab="No. of steps per day",
ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
qplot(filled.data,binwidth=1000,color="red",xlab="No. of steps per day",
ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
qplot(filled.data,binwidth=1000,xlab="No. of steps per day",
ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
qplot(filled.data,binwidth=1000,fill='blue',xlab="No. of steps per day",
ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
qplot(filled.data,binwidth=1000,fill='Red',xlab="No. of steps per day",
ylab="No. of times in a day(count)",main="Histogram of no. of steps take per day")
weekdays(head(data$date)
weekdays(head(data$date))
weekdays(head(data$date))
lubridate::weekdays(head(data$date))
lubridate::wday(head(data$date))
head(filled.data)
head(impData)
head(impData)
daytype <- function(date){
if(weekdays(date) %in% c("Saturday","Sunday")){
"Weekdend"
} else{
"weekday"
}
}
impData$daytype <- as.factor(sapply(date,daytype))
daytype(01-10-2012)
daytype(0001-10-20)
head(impData)
daytype <- function(date){
if(weekdays(date) %in% c("Saturday","Sunday")){
"Weekdend"
} else{
"weekday"
}
}
impData$daytype <- as.factor(sapply(impData$date,daytype))
daytype(0001-10-20)
daytype(01-10-2012)
str(impData)
head(impData$daytype)
head(impData)
head(filled.data)
attach(impData)
new.averages <- aggregate(steps~interval+daytype,impData,mean)
head(new.averages)
qplot(interval,steps,data=impData,fill=daytype,facets=daytype~.)
qplot(interval,steps,data=impData,geom="line",fill=daytype,facets=daytype~.)
qplot(interval,steps,data=new.averages,geom="line",fill=daytype,facets=daytype~.)
qplot(interval,steps,data=new.averages,geom="line",color=daytype,facets=daytype~.)
qplot(interval,steps,data=new.averages,geom="line",color=daytype,facets=daytype~.,xlab="Interval",
ylab="Number of Steps")
attach(impData)
new.averages <- aggregate(steps~interval,impData,mean)
head(new.averages)
qplot(interval,steps,data=new.averages,geom="line",color=daytype,facets=daytype~.,xlab="Interval",
ylab="Number of Steps")
```{r,echo=TRUE,fig.height=4}
new.averages <- aggregate(steps~interval+daytype,impData,mean)
head(new.averages)
qplot(interval,steps,data=new.averages,geom="line",color=daytype,facets=daytype~.,xlab="Interval",
ylab="Number of Steps"
ylab="Number of Steps")
qplot(interval,steps,data=new.averages,geom="line",color=daytype,facets=daytype~.,xlab="Interval",
ylab="Number of Steps")
qplot(interval,steps,data=new.averages,geom="line",color=daytype,facets=daytype~.,xlab="Interval",
ylab="Number of Steps",theme="bw")
